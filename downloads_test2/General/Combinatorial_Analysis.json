{
  "course_name": "Combinatorial Analysis",
  "course_description": "No description found.",
  "topics": [
    "Mathematics",
    "Applied Mathematics",
    "Discrete Mathematics",
    "Mathematics",
    "Applied Mathematics",
    "Discrete Mathematics"
  ],
  "syllabus_content": "Course Meeting Times\n\nLectures: 3 sessions / week, 1 hour / session\n\nPrerequisites\n\n18.02 Multivariable Calculus\nand\n18.06 Linear Algebra\nor\n18.700 Linear Algebra\n\nDescription\n\nThis course analyzes combinatorial problems and methods for their solution. Prior experience with abstraction and proofs is helpful. Topics include:\n\nEnumeration\n\nGenerating functions\n\nRecurrence relations\n\nConstruction of Bijections\n\nIntroduction to Graph Theory\n\nNetwork Algorithms\n\nExtremal Combinatorics\n\nTextbooks\n\nBona, Miklos.\nA Walk Through Combinatorics: An Introduction to Enumeration and Graph Theory\n. World Scientific Publishing Company, 2011. ISBN: 9789814335232. [Preview with\nGoogle Books\n]\n\nWe will cover Chapters 1 through 13. Additional lecture notes to be provided on the Matrix-Tree Theorem and Eulerian cycles.\n\nProblem Sets\n\nProblem sets are due at the end of lecture each Monday (or the first day of classes of that week if Monday is a holiday) for assignments of the previous week. Since solutions to problem sets will be made available shortly after the deadline for handing them in, in general late problem sets will not be accepted without a valid reason such as illness. A problem set that is one or two days late with a reason like \"more time needed\" might be accepted with a penalty, such as 15% off, if permission is granted before the problem set is due. (In this case the posting of solutions will be delayed.)\n\n\"Reasonable\" collaboration is permitted on problem sets, but you should not just copy someone else's work or look up the solution from an outside source. On each problem set please write the names of those students with whom you have collaborated.\n\nExams\n\nThere will be two one-hour exams and a final exam. There is no curve, but I suspect the average grade will be B.\n\nGrading\n\nGrades will be determined by a weighted average of\n\nACTIVITIES\n\nPERCENTAGES\n\nProblem Sets\n\n20%\n\nTwo Midterm Exams @ 20% each\n\n40%\n\nFinal Exam\n\n40%",
  "files": [
    {
      "category": "Exam",
      "title": "Combinatorial Analysis, Practice Final Exam",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/18-314-combinatorial-analysis-fall-2014/58d35ce43e702ce9d8710f7d33c5ff33_MIT18_314F14_pracexam.pdf",
      "content": "18.314 PRACTICE FINAL EXAM\n(for Final Exam of December 15, 2014)\nClosed book, calculators, computers, iPods, cell phones, etc., but you\nmay bring in one sheet of paper, no larger than 8 1′′ × 11′′\n, written on both\nsides. Do all eight problems. There are a total of 80 points. Be sure to show\nyour work on each problem.\n1.\n(a) (5 points) Solve the recurrence f(0) = 2, f(1) = 4, and\nf(n + 2) = 4f(n + 1) -2f(n),\nn ≥0.\n(Give a simple explicit formula for f(n). It is o.k. to use irrational\nnumbers.)\n(b) (5 points) Show that ⌊(2 +\n√\n2)n⌋is odd for all integers n ≥0.\n2. (10 points) Let f(n) be the number of ways to choose a permutation\nπ of 1, 2, . . . , n and color each cycle of π of even length either red or\nblue. For instance, f(1) = 1, f(2) = 3, f(3) = 9, and f(4) = 45. Set\nf(0) = 1. Find the generating function\nxn\nF(x) =\nX\nf(n)\nn≥0\n.\nn!\nTo get full credit, your answer should not involve any infinite sums,\ninfinite products, or the functions exp (the exponential function) and\nlog.\n3.\n(a) (5 points) Let f(n) be the number of ways to tile a 2×n rectangle\nwith 1 × 1 squares and 2 × k rectangles for any integer k ≥1,\nwhere the 2 × 1 rectangle must be vertical. (Set f(0) = 1.) For\ninstance, f(2) = 5, given by\nA larger example of such a tiling is given by\n\nFind a simple expression for the generating function\nF(x) =\nX\nf(n)xn.\nn≥0\n(b) (5 points; difficult) Let g(n) be the number of ways to tile a 2 × n\nrectangle with a × b rectangles for any integers a, b ≥1.\n(Set\ng(0) = 1.) For instance, g(2) = 8, given by\nA larger example of such a tiling is given by\nFind a simple expression for the generating function\nG(x) =\nX\ng(n)xn.\nn≥0\n4. (10 points) Let m, n ≥3. Let G be the graph obtained by identifying\nan edge of an m-cycle with the edge of an n-cycle. Thus G has m+n-2\nvertices and m + n -1 edges. Find the number κ(G) of spanning trees\nof G. (It is easiest to use \"naive\" reasoning and not to use the Matrix-\nTree Theorem.) The figure below shows the case m = 5 and n = 4.\n\n5. (10 points) Let G be a regular bipartite graph of degree d ≥2, i.e.,\nevery vertex of G has the same degree d ≥2.\nShow that G has a\nspanning subgraph (that is, a subgraph using every vertex of G) that\nis a disjoint union of cycles. (No two cycles should have a vertex in\ncommon.)\n6. (10 points) Compute the chromatic polynomial of the following graph\nG with eight vertices:\n7.\n(a) (5 points) Does there exist a planarly embedded graph with no\nisthmus (i.e., no edge e for which the same face lies on both sides\nof e) and with exactly one face with k vertices, 3 ≤k ≤8, and\nwith no other faces? Thus G has six faces in all.\n(b) (5 points) Same question, but for 3 ≤k ≤9.\n8. (10 points) Find the least positive integer n with the following property:\nif the edges of Kn are colored red and blue, then there must exist a\nmonochromatic non-closed path of length three, i.e., a path of length\nthree (not a triangle, so with four vertices and three edges) such that\nall edges in the path have the same color. (Five points for showing that\nsome value of n has this property. Full credit for finding the least such\nvalue and showing that it is indeed least.)\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n18.314 Combinatorial Analysis\nFall 2014\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Exam",
      "title": "Combinatorial Analysis, Solutions to Practice Final Exam",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/18-314-combinatorial-analysis-fall-2014/818aac71b9f4cbf1c5349119fbae7dd5_MIT18_314F14_pracexamsol.pdf",
      "content": "18.314 SOLUTIONS TO PRACTICE FINAL EXAM\n(for Final Exam of December 15, 2014)\nP\n1.\n(a) (5 points) Let F(x) =\nn≥0 f(n)xn. Multiply the recurrence by\nxn+2 and sum on n ≥0 to get\nF(x) -2 -4x = 4x(F(x) -2) -2x2F(x),\nso\nF(x)\n=\n-4x\n1 -4x + 2x2\n=\n1 -(2 +\n√\n2)x +\n1 -(2 -\n√\n2)x.\nThus\nf(n) = (2 +\n√\n2)n + (2 -\n√\n2)n.\n(b) (5 points) We have 2\n√\n-\n2 = 0.5857 · · ·, so 0 < (2 -\n√\n2)n < 1 for\nall n ≥1. It follows that\n⌊(2 +\n√\n2)n⌋= f(n) -1.\nNow f(1) is even and f(n + 2) = 2(2f√(n + 1) -f(n)) for n ≥0,\nso f(n) is even for n ≥1. Thus ⌊(2 +\n2)n⌋is odd for n ≥1. We\ncan also see that ⌊(2 +\n√\n2)0⌋= 1, which is also odd.\n2. This is a situation for the exponential formula. Partition the set [n]\ninto blocks. On each block of odd size k place a cycle in (k -1)! ways.\nIn each of even size place a cycle and then color red or blue in 2(k -1)!\nways. By the exponential formula,\nX\nxk\nF(x)\n=\nexp\n(k\nk odd\n-1)! k! + 2\nX\nk even\n(k -1)!xk\nk!\n!\n=\nexp\nX\nk≥1\nxk\nk +\nX\nk≥1\nx2k !\n2k\n\n=\nexp\n-log(1 -x) -2 log(1 -x2)\n\n=\n(1 -x)\n√\n1 -x2.\n\n3.\n(a) Each tiling is a sequence of the following \"primes\": a 2×1 rectan-\ngle divided into two 1×1 squares, and a 2×k rectangle for k ≥1.\nThere are two primes of length one, and one prime of each length\nk ≥2. Hence\nF(x)\n=\n1 -(2x + x2 + x3 + x4 + · · · )\n=\n1 -x -\nx\n1-x\n=\n-x\n.\n1 -3x + x2\nNote, One can easily deduce from this generating function that\nf(n) = F2n+1 (a Fibonacci number), but this was not part of the\nproblem.\n(b) First consider those tilings that consist only of 2×k rectangles, k ≥\n1. The sequence of lengths of these rectangles form a composition\nof n. Thus the number a(n) of such tilings a(n) of a 2\nn\n×n rectangle\nis 2 -1 (n ≥1), the number of compositions of n. Therefore\nX\nA(x)\n:=\na(n)xn\nX\nn≥1\n=\n2n-1xn\nn≥1\nx\n=\n.\n1 -2x\nNow consider those tilings that contain no 2 × k rectangle. They\nhave a horizontal line down the middle. Above and below the line\nare rectangles whose lengths form a composition of n. There are\n(2n-1)2 such pairs of compositions. Hence if b(n) is the number of\nsuch tilings of a 2 × n rectangle, then\nX\nB(x)\n:=\nb(n)xn\nX\nn≥1\n=\n(2n-1)2xn\nn≥1\nx\n=\n.\n1 -4x\nAn arbitrary tiling of a 2 × n rectangle consists of a sequence of\ntilings beginning with those counted by a(n) (but which may be\n\nempty at this first step), then those counted by b(n), then by a(n),\netc., some finite number of times. Therefore\nG(x)\n=\n(1 + A(x))(B(x) + B(x)A(x) + B(x)A(x)B(x) + · · · )\nX\n=\n(1 + A(x))\n(B(x)A(x))j(1 + B(x))\nj≥0\n(1 + A(x))(1 + B(x))\n=\n.\n1 -A(x)B(x)\nSubstituting A(x) = x/(1 -2x), B(x) = x/(1 -4x), and simpli-\nfying gives\n(1\nG(x) =\n-x)(1 -3x).\n1 -6x + 7x2\n4. If a spanning tree T does not contain the identified edge e, then there\nare m+n-2 choices, i.e., remove any of the m+n-2 remaining edges.\nIf T does contain e, then we can remove any of the remaining m -1\nedges of the m-cycle and any of the n -1 remaining n -1 edges of the\nn-cycle, so (m -1)(n -1) choices in all. Hence\nκ(G) = m + n -2 + (m -1)(n -1) = mn -1.\nA somewhat more direct argument is to remove any edge of the m-\ncycle and any edge of the n-cycle in mn ways. This gives a spanning\ntree except when we choose the identified edge e both times, so we get\nmn -1 trees in all.\n5. We know (Exercise 11.12 on page 266, done in class) that G has a\ncomplete matching M. When we remove M from G we still have a\nregular bipartite graph (of degree d -1 ≥1), so we have another\nmatching M′ disjoint from M. The union of M and M′ is a disjoint\nunion of cycles [why?].\n6. The chromatic polynomial of a 4-cycle C4 was computed in class and\nis easy to do in several different ways. We get\nχ\nC4(n) = n -4n + 6n -3n.\nFor each of the other four vertices we have n-2 choices of colors. Hence\nχG(n) = (n4 -4n3 + 6n2 -3n)(n -2)4.\n\n7.\n(a) If a planar ePmbedding without isthmuses has fi faces with i sides,\nthen 2E =\nifi. (See equation (12.2) on page 280.) Hence\n2E = 3 + 4 + 5 + 6 + 7 + 8 = 33,\ncontradicting that E is an integer.\n(b) Now we get 2E = 3 + 4 + 5 + 6 + 7 + 8 + 9 = 42, so E = 21. Since\nF = 7 we get from V -E+F = 2 that V = 16. To show that such\na graph actually exists, we have to construct it. For instance, we\ncould put the 9-sided face f on the outside and the 7-sided face\ncompletely inside f. This leads to\nThis is by no means the only graph meeting the conditions of the\nproblem.\n8. We claim that n = 5.\nWe can easily two-color the edges of K4 so\nthat there is no monochromatic path of length three: color the edges\nof a triangle red and the remaining three edges blue. Hence n ≥5.\nConsider now K5 with vertices 1,2,3,4,5. The four cycle with edges 12,\n23, 34, 14 must have two red and two blue edges; otherwise it already\nhas a monochromatic path of length three. If the two red edges don't\nhave a common vertex then one of the paths {12, 34, 13} or {23, 14, 13}\nis monochromatic. Thus we can assume that the 4-cycle has two red\nedges with a common vertex and two blue edges with a common vertex.\nSuppose that the red edges are 12,23 and the blue edges are 34,14. Then\none of the paths {12, 23, 35} and {34, 14, 35} is monochromatic. (I'm\nsure there must be many other arguments.)\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n18.314 Combinatorial Analysis\nFall 2014\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Combinatorial Analysis, Practice Midterm 1",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/18-314-combinatorial-analysis-fall-2014/4fedee5366e5075d4cd4a4fb3b25d808_MIT18_314F14_pracq1.pdf",
      "content": "18.314: PRACTICE HOUR EXAM #1\n(for hour exam of October 10, 2014)\nClosed book, notes, calculators, computers, cell phones, etc. Do all four\nproblems. Show your reasoning. There are a total of 50 points. However,\nthe actual hour exam will have four problems and a total of 40 points.\n1. (10 points) Fix an integer n ≥1.\nLet S be the set of all n-tuples\n(a1, . . . , an) whose entries ai are either 1, 2, or -3. Thus #S = 3n.\nFind the least number f(n) of elements of S we can pick so that we are\nguaranteed to have a nonempty subset T of these elements satisfying\nX\nv = (0, 0, . . . , 0).\nv∈T\nFor instance, f(2) > 3, since no nonempty subset of the set\n{(1, 2), (1, -3), (-3, 1)}\nhas elements summing to (0, 0).\nNote that you have to prove that\nyour value of f(n) has the stated property, and that this value is best\npossible, i.e., the result is false for f(n) -1.\n2. (10 points) Let f(n) be the number of self-conjugate partitions of n, all\nof whose parts are even. An example of such a partition is (4, 4, 2, 2).\nExpress f(4n) in terms of c(n), the total number of self-conjugate par-\ntitions of n. (Show your reasoning. A detailed proof is not necessary.\nJust state the basic idea.)\n3. (10 points) Fix n ≥1. Let f(n) be the number of permutations π of\n1, 2, . . . , 2n with the following property: π has exactly n cycles, and the\nlargest elements of the n cycles are the numbers 2, 4, 6, . . ., 2n. Find a\nsimple formula for f(n). You may write your answer either as a simple\nproduct or in terms of factorials and powers.\n4. (10 points) How many partitions of the set [9] have all their blocks\nof size 2 or 3? You may leave your answer expressed in terms of func-\ntions discussed in class (such as binomial coefficients, factorials, Stirling\nnumbers, etc.). You don't need to give a numerical answer.\n\n5. (10 points) For n ≥1, let f(n) be the number of n × n matrices of 0's\nand 1's such that every row and every column has at least one 1. For\ninstance f(1) = 1 and f(2) = 7. Use the sieve method (Principle of\nInclusion-Exclusion) to give a formula for f(n) as a single sum. (In my\nopinion this is the trickiest problem on the practice test, but I could\nbe wrong.)\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n18.314 Combinatorial Analysis\nFall 2014\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Combinatorial Analysis, Solutions to Practice Midterm 1",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/18-314-combinatorial-analysis-fall-2014/cb9c07793999ec2530d2d5c5b6361784_MIT18_314F14_pracq1sol.pdf",
      "content": "18.314: SOLUTIONS TO\nPRACTICE HOUR EXAM #1\n(for hour exam of October 10, 2014)\n1. We can partition S into 3n-1 three-element blocks such that the sum of\nthe elements in each block is (0, 0, . . . , 0). To do this define π(1) =\n2, π(2) = -3, π(-3) = 1.\n(We are just cyclically permuting the\nnumbers 1, 2, -3.) Let the block containing (a1, a2, . . . , an) also contain\n(π(a1), π(a2), . . . , π(an)) and (π(π((a1)), π(π(a2)), . . . , π(π(an))).\nFor\ninstance, when n = 4 one of the blocks is\n{(1, 2, -3, 2), (2, -3, 1, -3), (-3, 1, 2, 1)}.\nIf we choose 2 · 3n-1 + 1 elements of S, then some three of them must\nbe in the same block of the partition and therefore sum to (0, 0, . . . , 0).\nThus f(n) ≤2 · 3n-1 + 1. If we choose all elements of S whose first\ncoordinate is either 1 or 2, then the sum of any nonempty subset of the\nchosen elements has positive first coordinate and therefore cannot be\n(0, 0, . . . , 0). Since there are 2 · 3n vectors (a1, . . . , an) with a1 = 1 or\n2, we see that f(n) > 2 · 3n-1. Hence f(n) = 2 · 3n-1 + 1.\n2. The Young diagram of a self-conjugate partition of 4n with even parts\ncan be divided into n 2 × 2 squares. If we replace each of these 2 × 2\nsquares with a single square, then we get the Young diagram of a self-\nconjugate partition of n. Conversely, given the Young diagram of a\nself-conjugate partition of n, replace each square with a 2 × 2 square\nto get the Young diagram of a self-conjugate partition of 4n with even\nparts. Hence f(4n) = c(n).\n3. Insert the numbers 2, 4, 6, . . . , 2n, followed by 2n-1, 2n-3, . . . , 3, 1, in\nthat order, into the cycle notation for π. We start with (2 ∗)(4 ∗) · · ·(2n ∗).\nWe always write the cycles so that 2, 4, . . . , 2n are the first (leftmost)\nelements. Then insert 2n -1. There is only one choice: it must be\nplaced after 2n. Then insert 2n -3. There are three choices: after\n2n -2, 2n -1, 2n. Then insert 2n -5. There are five choices: after\n2n -4, 2n -3, 2n -2, 2n -1, 2n. Continuing in this way, we see that\nf(n) = 1 · 3 · 5 · · ·(2n -1).\nAnother way to write this answer is (2n)!/2nn!.\n\n4. The possible block sizes are (3, 3, 3) and (3, 2, 2, 2).\nIn class it was\nproved that the number of partitions of [n] with ai blocks of size i is\nn!\n.\n1!a12!a2 · · ·a1! a2! · · ·\nHence the number of partitions of [9] with all blocks of size 2 or 3 is\nequal to\n9!\n3!3 · 3! +\n9!\n.\n2!3 · 3!1 · 1! · 3!\nThis turns out to be equal to 1540.\n5. For each subset S of {1, . . . , n}, let g(S) be the number of n×n matrices\nof 0's and 1's such that every row contains a 1, and if i ∈S then column\ni does not contain a 1. Each row then has n-i available positions where\nwe can place the 1's. Thus if #S = k then there are 2n-k-1 possibilities\nfor each row. Hence g(S) = (2n-k -1)n. By the sieve method,\nf(n)\n=\ng(∅) -\n#\nX\ng(S) +\nX\ng(S) -· · · + (-1)n X\ng(S)\nS=1\n#S=2\n#S=n\nn\n=\nX\n(-1)k\nk=0\nn\nk\n\n(2n-k -1)n.\n(The last term is 0 and can be omitted.) This problem can also be\ndone by writing f(n) as a double sum and using the binomial theorem\nto reduce it to a single sum. Full credit for doing it correctly this way,\nthough the solution above is simpler.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n18.314 Combinatorial Analysis\nFall 2014\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Combinatorial Analysis, Practice Midterm 2",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/18-314-combinatorial-analysis-fall-2014/21d3bbafc454070e911c5bac96b12747_MIT18_314F14_pracq2.pdf",
      "content": "18.314: PRACTICE HOUR EXAM #2\n(for hour exam of November 14, 2014)\nClosed book, notes, calculators, computers, cell phones, etc. Do all four\nproblems. Show your reasoning. There are a total of 40 points\n1.\n(a) (7 points) Let f(n) be the number of partitions of n into powers of\n2, such that each power occurs at most three times. For instance,\nf(9) = 5, corresponding to the five partitions 81, 441, 4221, 42111,\n2221. (Set f(0) = 1.) Find a subset S of the positive integers such\nthat f(n) is equal to the number of partitions of n whose parts\ncome from S, for all n ≥0. (Show your reasoning.)\n(b) (3 points) Give a simple formula for f(n) in terms of the floor\nfunction ⌊a⌋, the greatest integer m ≤a.\n2. (10 points) For n ≥0 define an by a0 = 0, a1 = 1, and\nan+2 = 6an+1 -8an,\nn ≥0.\nFor what n is an a triangular number, i.e., a number of the form k(k +\n1)/2 for some integer k? (Show your reasoning.)\n3. (10 points) Let f(n) be the number of ways to color n pencils using the\nseven colors red, blue, green, yellow, white, black, and Halaya` u be, such\nthat an odd number of pencils are either red, blue, green, or yellow.\n(That is, the number of red pencils plus the number of blue pencils\nplus the number of green pencils plus the number of yellow pencils is\nodd.) Find a simple formula for f(n), n ≥0.\n4.\n(a) (7 points) Let n be odd, n ≥3.\nShow that the edges of the\ncomplete graph Kn cannot be partitioned into blocks such that\neach block consists of the edges of a Hamiltonian path.\n(b) (3 points) (difficult) Show that if n is even, then such a partition\nalways exists. The figure below shows a partition for n = 4 (solid\nlines are one block and dashed lines the other).\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n18.314 Combinatorial Analysis\nFall 2014\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Combinatorial Analysis, Solutions to Practice Midterm 2",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/18-314-combinatorial-analysis-fall-2014/0c8f173950572e7820b5d51c0bc0a6b5_MIT18_314F14_pracq2sol.pdf",
      "content": "18.314: SOLUTIONS TO\nPRACTICE HOUR EXAM #2\n(for hour exam of November 14, 2014)\n1.\n(a) We have\nX\nf(n)xn\n=\nY\n1 + x2k + x2·2k + x3·2k\nn≥0\nk≥0\nk\n=\nk\nY 1 -x4·2\n≥0\n.\n1 -x2k\nThe numerator factors cancel all the denominator factors except\nthe first two, i.e., 1 -x and 1 -x2, so\nX\nf(n)xn =\nn≥0\n.\n(1 -x)(1 -x2)\nHence f(n) is equal to the number of partitions of n with parts 1\nand 2, so S = {1, 2}.\n(b) We want to count partitions of n into parts 1 and 2. The number\nof 2's in the partition can range from 0 to ⌊n/2⌋, and the remaining\nparts must equal 1. Hence the number of choices is 1 + ⌊n/2⌋.\n2. Multiply the recurrence by xn+2 and sum on n ≥0.\nSet F(x) =\nP\nn≥0 a\nn\nnx . We get\nF(x) -x = 6xF(x) -8F(x),\nso\nx\nF(x)\n=\n1 -6x + 8x2\nx\n=\n(1 -2x)(1 -4x)\n1/2\n=\n1 -4x -\n1/2\n1 -2x.\nHence f(n) = 1\n2(4n-2n), Since 1\n2(4n-2n) = 1\nn\n22 (2n-1), f(n) is always\na triangular number.\n\n3. We are choosing an ordered pair (S, T) of subsets of the pencils such\nthat #S is odd and then coloring each pencil in S either red, blue,\ngreen, or yellow, and coloring each pencil in T either white, black, or\nHalaya` u be. If S has k elements where k is odd, then the number of\ncolorings of S is 4k. If T has k elements then the number of colorings\nof T is 3k.\nThe exponential generating function for the number of\ncolorings of S is\nk\nF(x\n=\nk\nX\n4k x\n)\nodd\nk!\n=\nsinh(4x)\n=\n(e4x -e-4x).\nThe exponential generating function for the number of colorings of T\nis\nk\nG(x =\nX\n3k x\n)\nk≥0\n= e3x.\nk!\nHence by Theorem 8.21 on page 168, we have\nn\nX\nx\nf(n)\nn≥0\nn!\n=\n1(e4x -e-4x)e3x\n=\n2(e7x -e-x)\n=\nxn\n(\nX\n7n -(-1)n)\nn≥0\nn! ,\nso f(n) = 1\nn\n2(7 -(-1)n).\nNote. Halaya` ub e is a kind of purple color named after a Phillipines\ndessert made from boiled and grated purple yams. See\nhttp://en.wikipedia.org/wiki/List of colors.\n4.\n(a) Each Hamiltonian path has n -1 edges.\nThe total number of\nedges of Kn is\nn\n\n= n(n -1)/2. Hence the number of paths is\nn/2, which fails to be an integer when n is odd.\n(b) Let the vertices be 0, 1, . . . , n -1. Let one of the paths P have\nvertices (in their order along P)\nn\n0, n -1, 1, n -2, 2, n -3, . . . ,\n.\n\nLet the other paths be obtained from P by adding i to each coor-\ndinate for i = 1, 2, . . . , n\n2 -1, and taking the sum modulo n (i.e.,\nif the sum exceeds n -1 then subtract n from it). For instance, if\nn = 8 then the four paths are\n7.\nWe leave the verification that this works as an exercise.\nAnother way to describe the same solution (suggested by Y. Hu) is\nto put the vertices 0, 1, . . . , n-1 in clockwise order on a circle. Let\nP be the zigzag path whose vertices (in order) are 0, n -1, 1, n -\n2, 2, n-3, 3, . . . , 1\n2n. Rotate the circle around the center by 2jπ/n\nradians for 0 ≤j ≤n\n2 -1. Each such rotation gives one of the\npaths in the partition into Hamiltonian paths.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n18.314 Combinatorial Analysis\nFall 2014\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Eulerian Digraphs and Oriented Trees",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/18-314-combinatorial-analysis-fall-2014/99d707393fabef4e95c3d2bd1690af91_MIT18_314F14_mt2.pdf",
      "content": "Eulerian digraphs and oriented trees.\nA famous problem which goes back to Euler asks for what graphs G is there\na closed walk which uses every edge exactly once. (There is also a version for\nnon-closed walks.) Such a walk is called an Eulerian tour (also known as an\nEulerian cycle). A graph which has an Eulerian tour is called an Eulerian\ngraph. Euler's famous theorem (the first real theorem of graph theory) states\nthat G is Eulerian if and only if it is connected and every vertex has even\ndegree. Here we will be concerned with the analogous theorem for directed\ngraphs.\nWe want to know not just whether an Eulerian tour exists, but\nhow many there are. We will prove an elegant determinantal formula for\nthis number closely related to the Matrix-Tree Theorem. For the case of\nundirected graphs no analogous formula is known, explaining why we consider\nonly the directed case.\nA (finite) directed graph or digraph D consists of a vertex set V\n=\n{v1, . . . , vp} and edge set E = {e1, . . . , eq}, together with a function φ : E →\nV × V (the set of ordered pairs (u, v) of elements of V ). If φ(e) = (u, v),\nthen we think of e as an arrow from u to v. We then call u the initial ver-\ntex and v the final vertex of e. (These concepts arose in the definition of\nan orientation in Definition 8.5.) A tour in D is a sequence e1, e2, . . . , er of\ndistinct edges such that the final vertex of ei is the initial vertex of ei+1 for\nall 1 ≤i ≤r -1, and the final vertex of er is the initial vertex of e1. A\ntour is Eulerian if every edge of D occurs at least once (and hence exactly\nonce). A digraph which has no isolated vertices and contains an Eulerian\ntour is called an Eulerian digraph. Clearly an Eulerian digraph is connected.\nThe outdegree of a vertex v, denoted outdeg(v), is the number of edges of\nG with initial vertex v. Similarly the indegree of v, denoted indeg(v), is the\nnumber of edges of D with final vertex v. A loop (edge of the form (v, v))\ncontributes one to both the indegree and outdegree. A digraph is balanced if\nindeg(v) = outdeg(v) for all vertices v.\n2.1 Theorem.\nA digraph D is Eulerian if and only if it is connected\nand balanced.\nProof. Assume D is Eulerian, and let e1, . . ., eq be an Eulerian tour.\nAs we move along the tour, whenever we enter a vertex v we must exit it,\n\nexcept at the very end we enter the final vertex v of eq without exiting it.\nHowever, at the beginning we exited v without having entered it. Hence\nevery vertex is entered as often as it is exited and so must have the same\noutdegree as indegree. Therefore D is balanced, and as noted above D is\nclearly connected.\nNow assume that D is balanced and connected. We may assume that D\nhas at least one edge. We first claim that for any edge e of D, D has a tour\nfor which e = e1. If e1 is a loop we are done. Otherwise we have entered\nthe vertex fin(e1) for the first time, so since D is balanced there is some exit\nedge e2. Either fin(e2) = init(e1) and we are done, or else we have entered\nthe vertex fin(e2) once more than we have exited it. Since D is balanced\nthere is new edge e3 with fin(e2) = init(e3). Continuing in this way, either\nwe complete a tour or else we have entered the current vertex once more than\nwe have exited it, in which case we can exit along a new edge. Since D has\nfinitely many edges, eventually we must complete a tour. Thus D does have\na tour which uses e1.\nNow let e1, . . . , er be a tour C of maximum length. We must show that\nr = q, the number of edges of D. Assume to the contrary that r < q. Since in\nmoving along C every vertex is entered as often as it is exited (with init(e1)\nexited at the beginning and entered at the end), when we remove the edges\nof C from D we obtain a digraph H which is still balanced, though it need\nnot be connected. However, since D is connected, at least one connected\ncomponent H1 of H contains at least one edge and has a vertex v in common\nwith C [why?]. Since H1 is balanced, there is an edge e of H1 with initial\nvertex v. The argument of the previous paragraph shows that H1 has a tour\nC′ of positive length beginning with the edge e. But then when moving along\nC, when we reach v we can take the \"detour\" C′ before continuing with C.\nThis gives a tour of length longer than r, a contradiction. Hence r = q, and\nthe theorem is proved. 2\nOur primary goal is to count the number of Eulerian tours of a connected\nbalanced digraph. A key concept in doing so is that of an oriented tree.\nAn oriented tree with root v is a (finite) digraph T with v as one of its\nvertices, such that there is a unique directed path from any vertex u to v.\nIn other words, there is a unique sequence of edges e1, . . . , er such that (a)\ninit(e1) = u, (b) fin(er) = v, and (c) fin(ei) = init(ei+1) for 1 ≤i ≤r -1.\n\nIt's easy to see that this means that the underlying undirected graph (i.e.,\n\"erase\" all the arrows from the edges of T) is a tree, and that all arrows\nin T \"point toward\" v. There is a surprising connection between Eulerian\ntours and oriented trees, given by the next result (due to de Bruijn and van\nAardenne-Ehrenfest). This result is sometimes called the BEST Theorem,\nafter de Bruijn, van Aardenne-Ehrenfest, Smith, and Tutte. However, Smith\nand Tutte were not involved in the original discovery.\n2.2 Theorem.\nLet D be a connected balanced digraph with vertex set\nV . Fix an edge e of D, and let v = init(e). Let τ(D, v) denote the number\nof oriented (spanning) subtrees of D with root v, and let o(D, e) denote the\nnumber of Eulerian tours of D starting with the edge e. Then\no(D, e) = τ(D, v)\nY\n(outdeg(u)\n.\n∈V\n-1)!\n(6)\nu\nProof. Let e = e1, e2, . . . , eq be an Eulerian tour E in D. For each vertex\nu = v, let e(u) be the \"last exit\" from u in the tour, i.e., let e(u) = ej where\ninit(e(u)) = u and init(ek) = u for any k > j.\nClaim #1. The vertices of D, together with the edges e(u) for all vertices\nu = v, form an oriented subtree of D with root v.\nProof of Claim #1. This is a straightforward verification. Let T be the\nspanning subgraph of D with edges e(u), u = v. Thus if |V | = p, then T has\np vertices and p -1 edges [why?]. There are three items to check to insure\nthat T is an oriented tree with root v:\n(a) T does not have two edges f and f ′ satisfying init(f) = init(f ′). This\nis clear since both f and f ′ can't be last exits from the same vertex.\n(b) T does not have an edge f with init(f) = v. This is clear since by\ndefinition the edges of T consist only of last exits from vertices other\nthan v, so no edge of T can exit from v.\n(c) T does not have a (directed) cycle C. For suppose C were such a cycle.\nLet f be that edge of C which occurs after all the other edges of C in\n\nthe Eulerian tour E. Let f ′ be the edge of C satisfying fin(f) = init(f ′)\n(= u, say). We can't have u = v by (b). Thus when we enter u via\nf, we must exit u. We can't exit u via f ′ since f occurs after f ′ in E.\nHence f ′ is not the last exit from u, contradicting the definition of T.\nIt's easy to see that conditions (a)-(c) imply that T is an oriented tree with\nroot v, proving the claim.\nClaim #2. We claim that the following converse to Claim #1 is true.\nGiven a connected balanced digraph D and a vertex v, let T be an oriented\n(spanning) subtree of D with root v. Then we can construct an Eulerian tour\nE as follows. Choose an edge e1 with init(e1) = v. Then continue to choose\nany edge possible to continue the tour, except we never choose an edge f\nof E unless we have to, i.e., unless it's the only remaining edge exiting the\nvertex at which we stand. Then we never get stuck until all edges are used,\nso we have constructed an Eulerian tour E. Moreover, the set of last exits\nof E from vertices u = v of D coincides with the set of edges of the oriented\ntree T.\nProof of Claim #2. Since D is balanced, the only way to get stuck is to\nend up at v with no further exits available, but with an edge still unused.\nSuppose this is the case. At least one unused edge must be a last exit edge,\ni.e., an edge of T [why?]. Let u be a vertex of T closest to v in T such that\nthe unique edge f of T with init(f) = u is not in the tour. Let y = fin(f).\nSuppose y = v. Since we enter y as often as we leave it, we don't use the\nlast exit from y. Thus y = v. But then we can leave v, a contradiction. This\nproves Claim #2.\nWe have shown that every Eulerian tour E beginning with the edge e\nhas associated with it a \"last exit\" oriented subtree T = T(E) with root\nv = init(e). Conversely, given an oriented subtree T with root v, we can\nobtain all Eulerian tours E beginning with e and satisfying T = T(E) by\nchoosing for each vertex u = v the order in which the edges from u, except\nthe edge of T, appear in E; as well as choosing the order in which all the\nedges from v except for e appear in E.\nThus for each vertex u we have\n(outdeg(u) -1)! choices, so for each T we have Q\nu(outdeg(u) -1)! choices.\nSince there are τ(G, v) choices for T, the proof is complete. 2\n\n2.3 Corollary.\nLet D be a connected balanced digraph, and let v be\na vertex of D. Then the number τ(D, v) of oriented subtrees with root v is\nindependent of v.\nProof.\nLet e be an edge with initial vertex v.\nBy equation (6), we\nneed to show that the number o(G, e) of Eulerian tours beginning with\ne is independent of e.\nBut e1e2 · · ·eq is an Eulerian tour if and only if\neiei+1 · · · eqe1e2 · · · ei-1 is also an Eulerian tour, and the proof follows [why?].\nWhat we obviously need to do next is find a formula for τ(G, v). Such a\nformula is due to W. Tutte in 1948. This result is very similar to the Matrix-\nTree Theorem, and indeed we will show (Example 2.6) that the Matrix-Tree\nTheorem is a simple corollary to Theorem 2.4.\n2.4 Theorem.\nLet D be a loopless connected digraph with vertex set\nV = {v1, . . . , vp}. Let L(D) be the p × p matrix defined by\n\n-mij,\nif i = j and there are m\nd\nij =\n\nij e ges with\nL\ninitial vertex vi and final vertex vj\noutdeg(vi),\nif i = j.\n(Thus L is the directed analogue of the laplacian matrix of an undirected\ngraph.) Let L0 denote L with the last row and column deleted. Then\ndet L0 = τ(D, vp).\n(7)\nNote. If we remove the ith row and column from L instead of the last row\nand column, then equation (7) still holds with vp replaced with vi.\nProof (sketch). Induction on q, the number of edges of D. The fewest\nnumber of edges which D can have is p -1 (since D is connected). Suppose\nthen that D has p -1 edges, so that as an undirected graph D is a tree. If\nD is not an oriented tree with root vp, then some vertex vi = vp of D has\noutdegree 0 [why?]. Then L0 has a zero row, so det L0 = 0 = τ(D, vp). If\non the other hand D is an oriented tree with root vp, then an argument like\nthat used to prove Lemma 1.7 (in the case when S is the set of edges of a\nspanning tree) shows that det L0 = 1 = τ(D, vp).\n\nNow assume that D has q > p -1 edges, and assume the theorem for\ndigraphs with at most q -1 edges. We may assume that no edge f of D\nhas initial vertex v, since such an edge belongs to no oriented tree with root\nv and also makes no contribution to L0.\nIt then follows, since D has at\nleast p edges, that there exists a vertex u = v of D of outdegree at least\ntwo.\nLet e be an edge with init(e) = u.\nLet D1 be D with the edge e\nremoved. Let D2 be D with all edges e′ removed such that init(e) = init(e′)\nand e′ = e. (Note that D2 is strictly smaller than D since outdeg(u) ≥2.)\nBy induction, we have det L0(D1) = τ(D1, vp) and det L0(D2) = τ(D2, vp).\nClearly τ(D, vp) = τ(D1, vp) + τ(D2, vp), since in an oriented tree T with\nroot vp, there is exactly one edge whose initial vertex coincides with that of\ne. On the other hand, it follows immediately from the multilinearity of the\ndeterminant [why?] that\ndet L0(D) = det L0(D1) + det L0(D2).\nFrom this the proof follows by induction. 2\n2.5 Corollary.\nLet D be a connected balanced digraph with vertex set\nV = {v1, . . . , vp}. Let e be an edge of D. Then the number o(D, e) of Eulerian\ntours of D with first edge e is given by\no(D, e) = (det L0(D))\nu\nY\n(outdeg(u)\n∈V\n-1)!.\nEquivalently (using Lemma 1.9), if L(D) has eigenvalues μ1, . . ., μp with μp =\n0, then\no(D, e) =\nμ1\nμp\n(outdeg(u)\n1)!.\np\n· · ·\n-\nu\nY\n∈V\n-\nProof. Combine Theorems 2.2 and 2.4. 2\n2.6 Example.\n(the Matrix-Tree Theorem revisited) Let G be a con-\nˆ\nnected loopless undirected graph. Let G be the digraph obtained from G by\nreplacing each edge e = uv of G with a pair of directed edges u →v and\nv →u\nGˆ\n. Clearly\nis balanced and connected. Choose a vertex v of G. There\nis an obvious one-to-one correspondence between spanning trees T of G and\nˆ\nˆ\noriented spanning trees T of G with root v, namely, direct each edge of T\n\nv\nL G\nL Gˆ\ntoward\n. Moreover,\n( ) =\n( ) [why?]. Hence the Matrix-Tree Theorem\nis an immediate consequence of the Theorem 2.4.\n\n2.7 Example. (the efficient mail carrier) A mail carrier2 has an itinerary\nof city blocks to which he (or she) must deliver mail. He wants to accomplish\nthis by walking along each block twice, once in each direction, thus passing\nalong houses on each side of the street. The blocks form the edges of a graph\nG, whose vertices are the intersections. The mail carrier wants simply to walk\nalong an Eulerian tour in the digraph Gˆ of the previous example. Making the\nplausible assumption that the graph is connected, not only does an Eulerian\ntour always exist, but we can tell the mail carrier how many there are. Thus\nhe will know how many different routes he can take to\navoid boredom. For instance, suppose G is the 3 × 3 grid illustrated below.\nr\nr\nr\nr\nr\nr\nr\nr\nr\nThis graph has 128 spanning trees. Hence the number of mail carrier\nroutes beginning with a fixed edge (in a given direction) is 128 · 1!42!43! =\n12288. The total number of routes is thus 12288 times twice the number of\nedges [why?], viz., 12288×24 = 294912. Assuming the mail carrier delivered\nmail 250 days a year, it would be 1179 years before he would have to repeat\na route!\n2.8 Example.\n(binary de Bruijn sequences) A binary sequence is just\na sequence of 0's and 1's.\nA binary de Bruijn sequence of degree n is a\nbinary sequence A = a1a2 · · · a2n such that every binary sequence b1 · · ·bn of\nlength n occurs exactly once as a \"circular factor\" of A, i.e., as a sequence\naiai+1 · · · ai+n-1, where the subscripts are taken modulo n if necessary. For\ninstance, some circular factors of the sequence abcdefg are a, bcde, fgab,\nand defga.\nNote that there are exactly 2n binary sequences of length n,\nso the only possible length of a binary de Bruijn sequence of degree n is 2n\n[why?]. Clearly any cyclic shift aiai+1 · · · a2na1a2 · · · ai-1 of a binary de Bruijn\nsequence a1a2 · · ·a2n is also a binary de Bruijn sequence, and we call two such\n2postperson?\n\nsequences equivalent. This relation of equivalence is obviously an equivalence\nrelation, and every equivalence class contains exactly one sequence beginning\nwith n 0's [why?]. Up to equivalence, there is one binary de Bruijn sequence\nof degree two, namely, 0011. It's easy to check that there are two inequivalent\nbinary de Bruijn sequences of degree three, namely, 00010111 and 00011101.\nHowever, it's not clear at this point whether binary de Bruijn sequences exist\nfor all n. By a clever application of Theorems 2.2 and 2.4, we will not only\nshow that such sequences exist for all positive integers n, but we will also\ncount the number of them. It turns out that there are lots of them. For\ninstance, the number of inequivalent binary de Bruijn sequences of degree\neight is equal to\n1329227995784915872903807060280344576.\nThe reader with some extra time on his or her hands is invited to write down\nthese sequences. De Bruijn sequences are named after Nicolaas Govert de\nBruijn, who published his work on this subject in 1946. However, it was\ndiscovered in 1975 that de Bruijn sequences had been earlier created and\nenumerated by C. Flye Sainte-Marie in 1894. De Bruijn sequences have a\nnumber of interesting applications to the design of switching networks and\nrelated topics.\nOur method of enumerating binary de Bruijn sequence will be to set up a\ncorrespondence between them and Eulerian tours in a certain directed graph\nDn, the de Bruijn graph of degree n. The graph Dn has 2n-1 vertices, which\nwe will take to consist of the 2n-1 binary sequences of length n -1.\nA\npair (a1a2 · · · an-1, b1b2 · · · bn-1) of vertices forms an edge of Dn if and only if\na2a3 · · · an-1 = b1b2 · · ·bn-2, i.e., e is an edge if the last n -2 terms of init(e)\nagree with the first n-2 terms of fin(e). Thus every vertex has indegree two\nand outdegree two [why?], so Dn is balanced. The number of edges of Dn is\n2n. Moreover, it's easy to see that Dn is connected (see Lemma 2.9). The\ngraphs D3 and D4 look as follows:\n\nSuppose that E = e1e2 · · ·e2n is an Eulerian tour in Dn. If fin(ei) is the\nbinary sequence ai1ai2 · · · ai,n-1, then replace ei in E by the last bit ai,n-1. It\nis easy to see that the resulting sequence β(E) = a1,n-1a2,n-1 · · · a2n,n-1 is a\nbinary de Bruijn sequence, and conversely every binary de Bruijn sequence\narises in this way. In particular, since Dn is balanced and connected there\nexists at least one binary de Bruijn sequence. In order to count the total\nnumber of such sequences, we need to compute det L(Dn).\nOne way to\ndo this is by a clever but messy sequence of elementary row and column\noperations which transforms the determinant into triangular form. We will\ngive instead an elegant computation of the eigenvalues of L(Dn) based on\nthe following simple lemma.\n2.9 Lemma.\nLet u and v be any two vertices of Dn. Then there is a\nunique (directed) walk from u to v of length n -1.\nProof. Suppose u = a1a2 · · · an-1 and v = b1b2 · · ·bn-1. Then the unique\npath of length n -1 from u to v has vertices\na1a2 · · · an-1, a2a3 · · · an-1b1, a3a4 · · · an-1b1b\n2, . . . , an-1b1 · · ·bn-2, b1b2 · · · bn-1.\n2.10 Theorem.\nThe eigenvalues of L(Dn) are 0 (with multiplicity one)\nand 2 (with multiplicity 2n-1 -1).\n\nProof. Let A(Dn) denote the directed adjacency matrix of Dn, i.e., the\nrows and columns are indexed by the vertices, with\nAuv =\n\n1,\nif (u, v) is an edge\n0,\notherwise.\nNow Lemma 2.9 is equivalent to the assertion that An-1 = J, the 2n-1×2n-1\nmatrix of all 1's [why?]. If the eigenvalues of A are λ1, . . . λ2n-1, then the\neigenvalues of J = An-1 are λn-1\nn\n, . . ., λ -1\n2n-1. By Lemma 1.4, the eigenvalues\nof J are 2n-1 (once) and 0 (2n-1 -1 times). Hence the eigenvalues of A are\n2ζ (once, where ζ is an (n -1)-st root of unity to be determined), and 0\n(2n-1 -1 times). Since the trace of A is 2, it follows that ζ = 1, and we have\nfound all the eigenvalues of A.\nNow L(Dn) = 2I -A(Dn) [why?]. Hence the eigenvalues of L are 2 -\nλ1, . . . , 2 -λ2n-1, and the proof follows from the above determination of\nλ1, . . . , λ2n-1. 2\n2.11 Corollary.\nThe number B0(n) of binary de Bruijn sequences of\ndegree n beginning with n 0's is equal to 22n-1-n. The total number B(n) of\nbinary de Bruijn sequences of degree n is equal to 22n-1.\nProof. By the above discussion, B0(n) is the number of Eulerian tours\nin Dn whose first edge the loop at vertex 00 · · ·0. Moreover, the outdegree\nof every vertex of Dn is two. Hence by Corollary 2.5 and Theorem 2.10 we\nhave\nB0(n) =\n22n-1-1\nn\nn-1\n= 22 -1-n.\nFinally, B(n) is obtained from B0(n) by multiplying by the number 2n of\nedges, and the proof follows. 2\nNote that the total number of binary sequences of length 2n is N = 22n.\nBy the√previous corollary, the number of these which are de Bruijn sequences\nis just\nN. This suggests the following unsolved problem. Let An be the set\nof all binary sequences of length 2n. Let Bn be the set of binary de Bruijn\nsequences of degree n. Find an explicit bijection φ : Bn × Bn →An, thereby\ngiving a combinatorial proof of Corollary 2.11.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n18.314 Combinatorial Analysis\nFall 2014\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "The Matrix Tree Theorem",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/18-314-combinatorial-analysis-fall-2014/2724112ea36679f82dc04f0b2f4f355e_MIT18_314F14_mt.pdf",
      "content": "THE MATRIX-TREE THEOREM\nThe Matrix-Tree Theorem.\nThe Matrix-Tree Theorem is a formula for the number of spanning trees of\na graph in terms of the determinant of a certain matrix. We begin with the\nnecessary graph-theoretical background. Let G be a finite graph, allowing\nmultiple edges but not loops. (Loops could be allowed, but they turn out to\nbe completely irrelevant.) We say that G is connected if there exists a walk\nbetween any two vertices of G. A cycle is a closed walk with no repeated\nvertices or edges, except for the the first and last vertex. A tree is a connected\ngraph with no cycles. In particular, a tree cannot have multiple edges, since\na double edge is equivalent to a cycle of length two. The three nonisomorphic\ntrees with five vertices are given by:\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\n@\n@\n@@\n@\n@\n@\n@\n@\nA basic theorem of graph theory (whose easy proof we leave as an exercise)\nis the following.\n1.1 Proposition.\nLet G be a graph with p vertices. The following\nconditions are equivalent.\n(a) G is a tree.\n(b) G is connected and has p -1 edges.\n(c) G is has no cycles and has p -1 edges.\n(d) There is a unique path (= walk with no repeated vertices) between any\ntwo vertices.\n\nA spanning subgraph of a graph G is a graph H with the same vertex set\nas G, and such that every edge of H is an edge of G. If G has q edges, then\nthe number of spanning subgraphs of G is equal to 2q, since we can choose\nany subset of the edges of G to be the set of edges of H. (Note that multiple\nedges between the same two vertices are regarded as distinguishable.)\nA\nspanning subgraph which is a tree is called a spanning tree. Clearly G has a\nspanning tree if and only if it is connected [why?]. An important invariant\nof a graph G is its number of spanning trees, called the complexity of G and\ndenoted κ(G).\n1.2 Example.\nLet G be the graph illustrated below, with edges a, b,\nc, d, e.\nr\nr\nr\nr\n@\n@\n@\n@\n@\n@\nb\ne\na\nc\nd\nThen G has eight spanning trees, namely, abc, abd, acd, bcd, abe, ace, bde, and\ncde (where, e.g., abc denotes the spanning subgraph with edge set {a, b, c}).\n1.3 Example.\nLet G = K5, the complete graph on five vertices. A\nsimple counting argument shows that K5 has 60 spanning trees isomorphic\nto the first tree in the above illustration of all nonisomorphic trees with five\nvertices, 60 isomorphic to the second tree, and 5 isomorphic to the third tree.\nHence κ(K5) = 125. It is even easier to verify that κ(K1) = 1, κ(K2) = 1,\nκ(K3) = 3, and κ(K4) = 16. Can the reader make a conjecture about the\nvalue of κ(Kp) for any p ≥1?\nOur object is to obtain a \"determinantal formula\" for κ(G). For this we\nneed an important result from matrix theory which is often omitted from\na beginning linear algebra course. This result, known as the Binet-Cauchy\ntheorem (or sometimes as the Cauchy-Binet theorem), is a generalization\nof the familiar fact that if A and B are n × n matrices, then det(AB) =\n\ndet(A) det(B) (where det denotes determinant)1. We want to extend this\nformula to the case where A and B are rectangular matrices whose product\nis a square matrix (so that det(AB) is defined). In other words, A will be an\nm × n matrix and B an n × m matrix, for some m, n ≥ 1.\nWe will use the following notation involving submatrices. Suppose A =\n(aij) is an m × n matrix, with 1 ≤i ≤m, 1 ≤j ≤n, and m ≤n. Given an\nm-element subset S of {1, 2, . . ., n}, let A[S] denote the m×m submatrix of A\nobtained by taking the columns indexed by the elements of S. In other words,\nif the elements of S are given by j1 < j2 < · · · < jm, then A[S] = (ai,jk),\nwhere 1 ≤i ≤m and 1 ≤k ≤m. For instance, if\n\nA =\n\nand S = {2, 3, 5}, then\nA[S] =\n\n.\nSimilarly, let B = (bij) be an n × m matrix with 1 ≤i ≤n, 1 ≤j ≤m and\nm ≤n. Let S be an m-element subset of {1, 2, . . ., n} as above. Then B[S]\ndenotes the m × m matrix obtained by taking the rows of B indexed by S.\nNote that At[S] = A[S]t, where t denotes transpose.\n1.4 Theorem.\n(the Binet-Cauchy Theorem) Let A = (aij) be an m×n\nmatrix, with 1 ≤i ≤m and 1 ≤j ≤n. Let B = (bij) be an n × m matrix\nwith 1 ≤i ≤n and 1 ≤j ≤m. (Thus AB is an m × m matrix.) If m > n,\nthen det(AB) = 0. If m ≤n, then\ndet(AB) =\nX\n(det A[S])(det B[S]),\nS\n1In the \"additional material\" handout (Theorem 2.4) there is a more general determi-\nnantal formula without the use of the Binet-Cauchy theorem. However, the use of the\nBinet-Cauchy theorem does afford some additional algebraic insight.\n\nwhere S ranges over all m-element subsets of {1, 2, . . ., n}.\nBefore proceeding to the proof, let us give an example. We write |aij| for\nthe determinant of the matrix (aij). Suppose\nc1\nd1\na\na\na\nA =\nb\n\nb2\nb3\n\n,\nB = c2\nd2\nc3\nd3\n.\nThen\na\na\nc\ndet(\n) =\n\n·\n\nd1\nAB\nb1\nb2\nc2\nd2\n\na1\na3\nc1\nd1\na2\na3\n\nc2\nd2\n\n+\n·\n+\n·\n.\n\nb1\nb3 c3\nd3 b2\nb3 c3\nd3\nProof of Theorem 1.4 (sketch).\nFirst suppose m > n. Since from\nlinear algebra we know that rank(AB) ≤rank(A) and that the rank of an\nm × n matrix cannot exceed n (or m), we have that rank(AB) ≤n < m.\nBut AB is an m × m matrix, so det(AB) = 0, as claimed.\nNow assume m ≤n. We use notation such as Mrs to denote an r × s\nmatrix M. It is an immediate consequence of the definition of matrix multi-\nplication (which the reader should check) that\nRmm\nSmn\nVmn\nWmm\nRV + SX\nRW + SY\n=\n.\n(1)\nTnm\nUnn\nXnn\nYnm\n\nTV + UX\nTW + UY\n\nIn other words, we can multiply \"block\" matrices of suitable dimensions as\nif their entries were numbers. Note that the entries of the right-hand side\nof (1) all have well-defined dimensions (sizes), e.g., RV + SX is an m × n\nmatrix since both RV and SX are m × n matrices.\nNow in equation (1) let R = Im (the m × m identity matrix), S = A,\nT = Onm (the n × m matrix of 0's), U = In, V = A, W = Omm, X = -In,\nand Y = B. We get\n\nIm\nA\n\nA\nOmm\nB\nOnm\nIn\n-I\nB\n\n=\n\nOmn\nA\n.\n(2)\nn\n-In\nB\n\nTake the determinant of both sides of (2). The first matrix on the left-hand\nside is an upper triangular matrix with 1's on the main diagonal. Hence its\n\ndeterminant is one. Since the determinant of a product of square matrices is\nthe product of the determinants of the factors, we get\n\nA\nOmm\nB\n\n=\n-In\n\nB\n\nOmn\nAB\n\n(\n\n-In\n.\n)\n\nIt is easy to see [why?] that the determinant on the right-hand side of\n(3) is equal to ± det(AB). So consider the left-hand side. A nonzero term in\nthe expansion of the determinant on the left-hand side is obtained by taking\nthe product (with a certain sign) of m + n nonzero entries, no two in the\nsame row and column (so one in each row and each column). In particular,\nwe must choose m entries from the last m columns. These entries belong to\nm of the bottom n rows [why?], say rows m + s1, m + s2, . . . , m + sm. Let\nS = {s1, s2, . . ., sm} ⊆{1, 2, . . ., n}. We must choose n -m further entries\nfrom the last n rows, and we have no choice but to choose the -1's in those\nrows m+i for which i ∈S. Thus every term in the expansion of the left-hand\nside of (3) uses exactly n -m of the -1's in the bottom left block -In.\nWhat is the contribution to the expansion of the left-hand side of (3)\nfrom those terms which use exactly the -1's from rows m + i where i ∈S?\nWe obtain this contribution by deleting all rows and columns to which these\n-1's belong (in other words, delete row m + i and column i whenever i ∈\n{1, 2, . . ., n} -S), taking the determinant of the 2m × 2m matrix MS that\nremains, and multiplying by an appropriate sign [why?]. But the matrix MS\nis in block-diagonal form, with the first block just the matrix A[S] and the\nsecond block just B[S]. Hence det MS = (det A[S])(det B[S]) [why?]. Taking\nall possible subsets S gives\ndet AB =\nX\n±(det A[S])(det B[S]).\nS⊆{1,2,...,n}\n|S|=m\nIt is straightforward but somewhat tedious to verify that all the signs are +;\nwe omit the details. This completes the proof. 2\nLet G be a graph with vertices v1, . . . , vp. The adjacency matrix of G\nis the p × p matrix A = A(G), over the field of complex numbers, whose\n(i, j)-entry aij is equal to the number of edges incident to vi and vj. Thus\n\nA is a real symmetric matrix (and hence has real eigenvalues) whose trace\nis the number of loops in G.\nWe now define two matrices related to A(G). Assume for simplicity that\nG has no loops. (This assumption is harmless since loops have no effect on\nκ(G).)\n1.5 Definition.\nLet G be as above. Give G an orientation o, i.e, for\nevery edge e with vertices u, v, choose one of the ordered pairs (u, v) or (v, u).\n(If we choose (u, v), say, then we think of putting an arrow on e pointing from\nu to v; and we say that e is directed from u to v, that u is the initial vertex\nand v the final vertex of e, etc.)\n(a) The incidence matrix M(G) of G (with respect to the orientation o)\nis the p × q matrix whose (i, j)-entry M ij is given by\n\n1,\nif the edge ej has initial vertex vi\nM ij =\n\n-1,\nif the edge ej has final vertex vi\n0,\notherwise.\n(b) The laplacian matrix L(G) of G is the p×p matrix whose (i, j)-entry\nLij is given by\n\n-mij,\nif i = j and there are mij edges between vi and v\nLij =\nj\ndeg(vi),\nif i = j,\nwhere deg(vi) is the number of edges incident to v\nL\ni. (Thus\n(G) is symmetric\nand does not depend on the orientation o.)\nNote that every column of M(G) contains one 1, one -1, and q -2\n0's; and hence the sum of the entries in each column is 0.\nThus all the\nrows sum to the 0 vector, a linear dependence relation which shows that\nrank(M(G)) < p. Two further properties of M(G) and L(G) are given by\nthe following lemma.\n1.6 Lemma.\n(a) We have\nt\nMM = L.\n(b) If G is regular of degree d (i.e., every vertex of G has degree d),\nthen L(G) = dI -A(G), where A(G) denotes the adjacency matrix of G.\n\nHence if G (or A(G)) has eigenvalues λ1, . . . , λp, then L(G) has eigenvalues\nd -λ1, . . ., d -λp.\nProof. (a) This is immediate from the definition of matrix multiplication.\nSpecifically, for vi, vj ∈V (G) we have\n(\nt\nMM )ij =\ne\nX\nM M\nik\njk.\n∈\nk E(G)\nIf i = j, then in order for M ikMjk = 0, we must have that the edge ek\nconnects the vertices vi and vj. If this is the case, then one of M ik and Mjk\nwill be 1 and the other -1 [why?], so their product is always -1. Hence\n(\nt\nMM )ij = -mij, as claimed.\nThere remains the case i = j. Then M M\nik\nik will be 1 if ek is an edge\nwith vi as one of its vertices and will be 0 otherwise [why?]. So now we get\n(\nt\nMM )ii = deg(vi), as claimed. This proves (a).\n(b) Clear by (a), since the diagonal elements of\nt\nMM are all equal to d.\nNow assume that G is connected, and let M 0(G) be M(G) with its last\nrow removed. Thus M 0(G) has p -1 rows and q columns. Note that the\nnumber of rows is equal to the number of edges in a spanning tree of G. We\ncall M 0(G) the reduced incidence matrix of G. The next result tells us the\ndeterminants (up to sign) of all (p-1)×(p-1) submatrices N of M 0. Such\nsubmatrices are obtained by choosing a set S of p -1 edges of G, and taking\nall columns of M 0 indexed by the edges in S. Thus this submatrix is just\nM 0[S].\n1.7 Lemma.\nLet S be a set of p -1 edges of G. If S does not form the\nset of edges of a spanning tree, then det M 0[S] = 0. If, on the other hand,\nS is the set of edges of a spanning tree of G, then det M 0[S] = ±1.\nProof. If S is not the set of edges of a spanning tree, then some subset\nR of S forms the edges of a cycle C in G. Consider the submatrix M 0[R]\nof M 0[S] obtained by taking the columns indexed by edges in R. Suppose\nthat the cycle C defined by R has edges f1, . . ., fs in that order. Multiply\nthe column of M 0[R] indexed by fj by 1 if in going around C we traverse\n\nfi in the direction of its arrow; otherwise multiply the column by -1. These\ncolumn multiplications will multiply the determinant of M 0[R] by ±1. It is\neasy to see (check a few small examples to convince yourself) that every row\nof this modified M 0[R] has the sum of its elements equal to 0. Hence the\nsum of all the columns is 0. Thus in M 0[S] we have a set of columns for\nwhich a linear combination with coefficients ±1 is 0 (the column vector of all\n0's). Hence the columns of M 0[S] are linearly dependent, so det M 0[S] = 0,\nas claimed.\nNow suppose that S is the set of edges of a spanning tree T. Let e be an\nedge of T which is connected to vp (the vertex which indexed the bottom row\nof M, i.e., the row removed to get M 0). The column of M 0[S] indexed by e\ncontains exactly one nonzero entry [why?], which is ±1. Remove from M 0[S]\nthe row and column containing the nonzero entry of column e, obtaining a\n(p-2)×(p-2) matrix M ′\n0. Note that det(M 0[S]) = ± det(M ′\n0) [why?]. Let\nT ′ be the tree obtained from T by contracting the edge e to a single vertex\n(so that vp and the remaining vertex of e are merged into a single vertex u).\nThen M ′\n0 is just the matrix obtained from the incidence matrix M(T ′) by\nremoving the row indexed by u [why?]. Hence by induction on the number\np of vertices (the case p = 1 being trivial), we have det(M ′\n0) = ±1. Thus\ndet(M 0[S]) = ±1, and the proof follows. 2\nWe have now assembled all the ingredients for the main result of this\nsection (due originally to Borchardt). Recall that κ(G) denotes the number\nof spanning trees of G.\n1.8 Theorem.\n(the Matrix-Tree Theorem) Let G be a finite connected\ngraph without loops, with laplacian matrix L = L(G). Let L0 denote L with\nthe last row and column removed (or with the ith row and column removed\nfor any i). Then\ndet(L0) = κ(G).\nProof.\nSince L =\nt\nMM\n(Lemma 1.6(a)), it follows immediately that\nt\nL = M M\n0. Hence by the Binet-Cauchy theorem (Theorem 1.4), we have\ndet(L0) =\nX\n(det M 0[S])(det\nt\nM 0[S]),\n(4)\nS\nwhere S ranges over all (p-1)-element subsets of {1, 2 . . ., q} (or equivalently,\nover all (p -1)-element subsets of the set of edges of G). Since in general\n\nAt[S] = A[S]t, equation (4) becomes\ndet(\n) =\nX\n(det\n[S])2\nL\nM\n.\n(5)\nS\nAccording to Lemma 1.7, det(M 0[S]) is ±1 if S forms the set of edges of a\nspanning tree of G, and is 0 otherwise. Therefore the term indexed by S in\nthe sum on the right-hand side of (5) is 1 if S forms the set of edges of a\nspanning tree of G, and is 0 otherwise. Hence the sum is equal to κ(G), as\ndesired. 2\nThe operation of removing a row and column from L(G) may seem some-\nwhat contrived. We would prefer a description of κ(G) directly in terms of\nL(G). Such a description will follow from the next lemma.\n1.9 Lemma.\nLet M be a p×p matrix with real entries such that the sum\nof the entries in every row and column is 0. Let M0 be the matrix obtained\nfrom M by removing the last row and last column (or more generally, any row\nand any column). Then the coefficient of x in the characteristic polynomial\ndet(M -xI) of M is equal to -p · det(M0). (Moreover, the constant term of\ndet(M -xI) is 0.)\nProof. The constant term of det(M -xI) is det(M), which is 0 since\nthe rows of M sum to 0.\nFor simplicity we prove the rest of the lemma only for removing the last\nrow and column, though the proof works just as well for any row and column.\nAdd all the rows of M -xI except the last row to the last row. This doesn't\neffect the determinant, and will change the entries of the last row all to -x\n(since the rows of M sum to 0). Factor out -x from the last row, yielding a\nmatrix N(x) satisfying det(M -xI) = -x det(N(x)). Hence the coefficient of\nx in det(M -xI) is given by -det(N(0)). Now add all the columns of N(0)\nexcept the last column to the last column. This does not effect det(N(0)).\nBecause the columns of M sum to 0, the last column of N(0) becomes the\ncolumn vector [0, 0, . . ., 0, p]t. Expanding the determinant by the last column\nshows that det(N(0)) = p · det(M0), and the proof follows. 2\n1.10 Corollary.\n(a) Let G be a connected (loopless) graph with p\nvertices. Suppose that the eigenvalues of L(G) are μ1, . . . , μp-1, μp, with μp =\n\n0. Then\nκ(G) =\nμ1μ2 · · · μp\np\n-1.\n(b) Suppose that G is also regular of degree d, and that the eigenvalues of\nA(G) are λ1, . . . , λp-1, λp, with λp = d. Then\nκ(G) =\n(d -λ1)(d -λ2) · · · (d -λp\n1).\np\n-\nProof. (a) We have\ndet(L -xI)\n=\n(μ1 -x) · · · (μp-1 -x)(μp -x)\n=\n-(μ1 -x)(μ2 -x) · · · (μp-1 -x)x.\nHence the coefficient of x is -μ1μ2 · · · μp-1. By Lemma 1.9, we get\n-μ1μ2 · · ·μp-1 = p · det(L0).\nBy Theorem 1.8 we have det(L0) = κ(G), and the proof follows.\n(b) Immediate from (a) and Lemma 1.6(b). 2\nLet us look at a couple of examples of the use of the Matrix-Tree Theorem.\n1.11 Example.\nLet G = Kp, the complete graph on p vertices. Now\nKp is regular of degree d = p -1, and\nA(Kp) + I = J,\nthe p×p matrix of all 1's. Note that rank(J) = 1 [why?], so p-1 eigenvalues\nof J are equal to 0.\nSince trace(J) = p and the sum of the eigenvalues\nequals the trace, the remaining eigenvalue of J is p. Thus the eigenvalues of\nA(Kp) = J-I are -1 (p-1 times) and p-1 (once).Hence from Corollary 1.10\nthere follows\nκ(Kp) =\n((p -1) -(-1))p-1 = pp-2.\np\nThis surprising result is often attributed to Cayley, who stated it without\nproof in 1889 (and even cited Borchardt explicitly). However, it was in fact\nstated by Sylvester in 1857, while a proof was published by Borchardt in\n1860.\nIt is clear that Cayley and Sylvester could have produced a proof\n\nif asked to do so. There are many other proofs known, including elegant\ncombinatorial arguments due to Pru fer, Joyal, Pitman, and others.\n1.12 Example.\nThe n-cube Cn is the graph with vertex set Zn\n2 (the set\nof all n-tuples of 0's and 1's), and two vertices u and v are connected by an\nedge if they differ in exactly one component. Now Cn is regular of degree n,\nand it can be shown that its eigenvalues are n -2i with multiplicity\nn\ni\nfor\n0 ≤i ≤n. (See the solution to Exercise 10.18(d) of the text.) Henc\ne f\n\nrom\nCorollary 1.10(b) there follows the amazing result\nκ(Cn)\n=\nn\n)\n2n\nY\n(n\n(2i\ni)\ni=1\nn\n=\n22n\nn\n-n-1 Y (i\ni).\ni=1\nTo my knowledge a direct combinatorial proof is not known.\n\n18.314 (Fall 2011)\nProblems on the Matrix-Tree Theorem\n1. The complete bipartite graph Krs has vertex set A ∪B, where #A = r,\n#B = s, and A ∩B = Ø. There is an edge between every vertex of\nA and every vertex of B, so rs edges in all. Let L = L(Krs) be the\nlaplacian matrix of Krs.\n(a) Find a simple upper bound on rank(L -rI).\nDeduce a lower\nbound on the number of eigenvalues of L equal to r.\n(b) Assume r = s, and do the same as (a) for s instead of r.\n(c) Find the remaining eigenvalues of L. (Hint. Use the fact that\nthe rows of L sum to 0, and compute the trace of L.)\n(d) Use (a)-(c) to compute κ(Krs), the number of spanning trees of\nKrs.\n(e) (optional) Give a combinatorial proof of the formula for κ(Krs).\n2. Let V be the subset of Z×Z on or inside some simple closed polygonal\ncurve whose vertices belong to Z×Z, such that every line segment that\nmakes up the curve is parallel to either the x-axis or y-axis. Draw an\nedge e between any two points of V at distance one apart, provided e\nlies on or inside the boundary curve. We obtain a planar graph G, an\nexample being\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nLet G′ be the dual graph G∗with the \"outside\" vertex deleted. (The\nvertices of G∗are the regions of G. For each edge e of G, say with\nregions R and R′ on the two sides of e, there is an edge of G∗between\nR and R′.) For the above example, G′ is given by\n\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nr\nLet λ1, . . . , λp denote the eigenvalues of G′ (i.e., of the adjacency matrix\nA(G′)). Show that\np\nκ(G) =\nY\n(4 -λi).\ni=1\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n18.314 Combinatorial Analysis\nFall 2014\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    }
  ]
}